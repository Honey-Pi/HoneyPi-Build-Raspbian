arch: amd64
os: linux
dist: bionic
language: shell
version: ~> 1.0
addons:
  apt:
    update: true
    packages:
      - language-pack-en
      - locales
      - locales-all
      - qemu
      - qemu-user-static
      - binfmt-support
      - parted
      - wget
      - dosfstools
      - zip
      - git
      - curl
      - coreutils
      - quilt
      - debootstrap
      - bsdtar
install:
- sudo apt-get install -y coreutils quilt parted qemu-user-static debootstrap zerofree zip dosfstools bsdtar libcap2-bin grep rsync xz-utils file git curl bc qemu-utils kpartx
before_script:
- export LANGUAGE=en_GB.UTF-8
- export LANG=en_GB.UTF-8
- export LC_ALL=en_GB.UTF-8
- sudo locale-gen en_GB.UTF-8
script:
- git clone https://github.com/RPi-Distro/pi-gen pi-gen
- cd pi-gen && git fetch && git fetch --tags
- git checkout 2023-12-05-raspios-bookworm
- cp ./../config ./config
- cp -R ./../stage-honeypi ./stage-honeypi
- travis_wait 60 sudo ./build.sh
before_deploy:
- export RELEASE_FILE_NAME="deploy/image_"$(date +%Y-%m-%d)"-HoneyPi-lite.zip"
- export MD5=$(md5sum ${RELEASE_FILE_NAME} | cut -d ' ' -f 1)
- export SHA1=$(sha1sum ${RELEASE_FILE_NAME} | cut -d ' ' -f 1)
- touch MD5:"${MD5}"
- touch SHA1:"${SHA1}"
- echo "deploying $RELEASE_FILE_NAME to GitHub releases"
- export TRAVIS_TAG=$(date +%Y-%m-%d)
- export RELEASE_NAME=$(date +%Y-%m-%d)"-HoneyPi"
deploy:
  provider: releases
  token: $GITHUB_TOKEN
  tag_name: $TRAVIS_TAG
  name: $RELEASE_NAME
  file: $RELEASE_FILE_NAME
  release_notes: Raspberry Pi OS Lite image with HoneyPi pre installed. Release created by travis-ci.
  edge: true # opt in to dpl v2
  file_glob: true
  cleanup: false
  overwrite: true
  draft: false
