os: linux
dist: bionic
arch: arm64
language: shell
version: ~> 1.0
addons:
  apt:
    update: true
    packages:
      - qemu
      - qemu-user-static
      - binfmt-support
      - parted
      - wget
      - dosfstools
      - zip
      - git
      - curl
      - coreutils
      - quilt
      - debootstrap
      - bsdtar
services:
#  - docker
before_install:
- sudo apt-get update
install:
# prepare qemu
#- docker run --rm --privileged multiarch/qemu-user-static:register --reset
#- wget https://launchpadlibrarian.net/433338128/qemu-user-static_3.1+dfsg-2ubuntu3.3_amd64.deb
#- wget https://launchpad.net/ubuntu/+source/binfmt-support/2.2.0-2/+build/16376983/+files/binfmt-support_2.2.0-2_amd64.deb
#- sudo dpkg -i binfmt-support_2.2.0-2_amd64.deb qemu-user-static_3.1+dfsg-2ubuntu3.3_amd64.deb
- sudo apt-get install -y coreutils quilt parted qemu-user-static debootstrap zerofree zip dosfstools bsdtar libcap2-bin grep rsync xz-utils file git curl bc qemu-utils kpartx
script:
- git clone https://github.com/RPi-Distro/pi-gen pi-gen
- cd pi-gen && git fetch && git fetch --tags
- git checkout 2021-03-04-raspbian-buster
- cp ./../config ./config
- cp -R ./../stage-honeypi ./stage-honeypi
- travis_wait 60 sudo ./build.sh
before_deploy:
- export RELEASE_FILE_NAME="deploy/image_"$(date +%Y-%m-%d)"}"-HoneyPi-lite.zip"
- export MD5=$(md5sum ${RELEASE_FILE_NAME} | cut -d ' ' -f 1)
- export SHA1=$(sha1sum ${RELEASE_FILE_NAME} | cut -d ' ' -f 1)
- touch MD5:"${MD5}"
- touch SHA1:"${SHA1}"
- echo "deploying $RELEASE_FILE_NAME to GitHub releases"
deploy:
  provider: releases
  token: $GITHUB_TOKEN
  file: $RELEASE_FILE_NAME
  edge: true # opt in to dpl v2
  on:
    tags: true
    repo: HoneyPi/HoneyPi-Build-Raspbian
  file_glob: true
  cleanup: true
  draft: false
